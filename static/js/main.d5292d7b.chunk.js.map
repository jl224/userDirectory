{"version":3,"sources":["components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["Wrapper","props","className","children","Title","App","state","empTotal","employees","search","order","handleInputChange","event","target","name","value","console","log","setState","filter","emp","toLowerCase","includes","handleFormSubmit","preventDefault","handleSort","empSort","sort","a","b","this","onChange","type","placeholder","onClick","Table","striped","bordered","hover","map","src","image","alt","title","address","phone","Component","ReactDOM","render","document","getElementById"],"mappings":"2jGAOeA,MAJf,SAAiBC,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAME,W,MCG1BC,MAJf,SAAeH,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAME,W,OCsHvBE,E,4MAxGbC,MAAQ,CACNC,SAAUC,EACVA,YACAC,OAAQ,GACRC,OAAO,G,EAKTC,kBAAoB,SAAAC,GAAU,IAAD,IAEHA,EAAMC,OAAtBC,EAFmB,EAEnBA,KAAMC,EAFa,EAEbA,MACdC,QAAQC,IAAI,aAAcH,EAAMC,GAEhC,IAAIN,EAASM,EACb,EAAKG,UAAL,mBACGJ,EAAOC,GADV,0BAEa,EAAKT,MAAMC,SAASY,QAAO,SAAAC,GAAG,OAAIA,EAAIN,KAAKO,cAAcC,SAASb,EAAOY,mBAFtF,K,EAMFE,iBAAmB,SAAAX,GAEjBA,EAAMY,iBACN,IAAIf,EAAS,EAAKH,MAAMG,OAGxB,EAAKS,SAAS,CACZT,OAAQ,GACRD,UAAW,EAAKF,MAAME,UAAUW,QAAO,SAAAC,GAAG,OAAIA,EAAIN,KAAKO,cAAcC,SAASb,EAAOY,qB,EAKzFI,WAAa,WAEXT,QAAQC,IAAI,gBAGZD,QAAQC,IAAI,UAAW,EAAKX,MAAMI,OAClC,IAAIA,EAAQ,EAAKJ,MAAMI,MACnBgB,EAAU,EAAKpB,MAAME,UAAUmB,MAAK,SAAUC,EAAGC,GACnD,OAAInB,EACEkB,EAAEd,KAAOe,EAAEf,MAAgB,EACjB,EAKVc,EAAEd,KAAOe,EAAEf,KAAe,GACf,KAGnB,EAAKI,SAAS,CAAEV,UAAWkB,EAAShB,OAAQ,EAAKJ,MAAMI,S,uDAIvD,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,uBAEA,0BAAMR,UAAU,QACd,2BACEa,MAAOe,KAAKxB,MAAMG,OAClBK,KAAK,SACLiB,SAAUD,KAAKnB,kBACfqB,KAAK,OACLC,YAAY,eAGd,4BAAQC,QAASJ,KAAKP,kBAAtB,WAMF,kBAACY,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3B,+BACE,4BACE,6BACA,wBAAIJ,QAASJ,KAAKL,YAAlB,QACA,qCACA,uCACA,uCAGJ,+BACGK,KAAKxB,MAAME,UAAU+B,KAAI,SAAAnB,GAAG,OAC3B,4BACE,4BAAI,yBAAKoB,IAAKpB,EAAIqB,MAAOC,IAAKtB,EAAIN,QAClC,4BAAKM,EAAIN,MACT,4BAAKM,EAAIuB,OACT,4BAAKvB,EAAIwB,SACT,4BAAKxB,EAAIyB,kB,GAxGPC,a,MCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d5292d7b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Title(props) {\r\n  return <h1 className=\"title\">{props.children}</h1>;\r\n}\r\n\r\nexport default Title;\r\n","import React, { Component } from \"react\";\r\nimport Table from 'react-bootstrap/Table'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Title from \"./components/Title\";\r\nimport employees from \"./employees.json\";\r\n\r\nclass App extends Component {\r\n\r\n  // show in a table the list of employees\r\n\r\n  // handle a form to be able to filter\r\n\r\n\r\n  // handle sort of a column\r\n\r\n\r\n  // Setting this.state.friends to the friends json array\r\n  state = {\r\n    empTotal: employees,\r\n    employees,\r\n    search: \"\",\r\n    order: true\r\n\r\n  };\r\n\r\n\r\n  handleInputChange = event => {\r\n    // Getting the value and name of the input which triggered the change\r\n    const { name, value } = event.target;\r\n    console.log(\"onchange: \", name, value)\r\n    // Updating the input's state\r\n    let search = value\r\n    this.setState({\r\n      [name]: value,\r\n      employees: this.state.empTotal.filter(emp => emp.name.toLowerCase().includes(search.toLowerCase()))\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    // Preventing the default behavior of the form submit (which is to refresh the page)\r\n    event.preventDefault();\r\n    let search = this.state.search\r\n    // Alert the user their first and last name, clear `this.state.firstName` and `this.state.lastName`, clearing the inputs\r\n    // alert(`Hello ${this.state.search}`)\r\n    this.setState({\r\n      search: \"\",\r\n      employees: this.state.employees.filter(emp => emp.name.toLowerCase().includes(search.toLowerCase()))\r\n\r\n\r\n    });\r\n  };\r\n  handleSort = () => {\r\n    // Filter this.state.friends for friends with an id not equal to the id being removed\r\n    console.log(\"name clicked\")\r\n    // Set this.state.friends equal to the new friends array\r\n    //this.setState({ employees });\r\n    console.log(\"order: \", this.state.order)\r\n    let order = this.state.order\r\n    let empSort = this.state.employees.sort(function (a, b) {\r\n      if (order) {\r\n        if (a.name < b.name) { return -1; }\r\n        else { return 1 }\r\n        //  if (a.name > b.name) { return 1; }\r\n        //  return 0;\r\n      }\r\n      else {\r\n        if (a.name < b.name) { return 1; }\r\n        else { return -1 }\r\n      }\r\n    })\r\n    this.setState({ employees: empSort, order: !this.state.order })\r\n  }\r\n  // Map over this.state.friends and render a FriendCard component for each friend object\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Title>Employees List</Title>\r\n\r\n        <form className=\"form\">\r\n          <input\r\n            value={this.state.search}\r\n            name=\"search\"\r\n            onChange={this.handleInputChange}\r\n            type=\"text\"\r\n            placeholder=\"First Name\"\r\n          />\r\n\r\n          <button onClick={this.handleFormSubmit}>Submit</button>\r\n\r\n\r\n        </form>\r\n\r\n\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              <th onClick={this.handleSort}>Name</th>\r\n              <th>Title</th>\r\n              <th>Address</th>\r\n              <th>Phone</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.employees.map(emp => (\r\n              <tr>\r\n                <td><img src={emp.image} alt={emp.name}></img></td>\r\n                <td>{emp.name}</td>\r\n                <td>{emp.title}</td>\r\n                <td>{emp.address}</td>\r\n                <td>{emp.phone}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n"],"sourceRoot":""}